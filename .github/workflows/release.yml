name: Release

on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]
  push:
    branches: [main, develop]
    tags-ignore: ["**"]

jobs:
  version:
    name: Version
    permissions: write-all
    concurrency: tagging
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    outputs:
      semver_tag: ${{ steps.semver-tag.outputs.semver_tag }}
      previous_tag: ${{ steps.semver-tag.outputs.previous_tag }}
      is_prerelease: ${{ steps.semver-tag.outputs.is_prerelease }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Calculate semver tag
        id: semver-tag
        uses: gandarez/semver-action@master
        with:
          branching_model: git-flow
          prefix: v
          debug: true
      - name: Create tag
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.semver-tag.outputs.semver_tag }}",
              sha: context.sha
            })

  release:
    name: Release
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Create release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
         repo_token: ${{ secrets.GH_TOKEN }}
         automatic_release_tag: ${{ needs.version.outputs.semver_tag }}
         prerelease: false
      - name: Remove tag if failure
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
         github-token: ${{ github.token }}
         script: |
            github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "tags/${{ needs.version.outputs.semver_tag }}"
            })
